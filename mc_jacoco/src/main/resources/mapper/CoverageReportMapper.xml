<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--接口和映射文件相对应-->
<mapper namespace="com.example.mc_jacoco.dao.CoverageReportDao">
    <resultMap id="coverageReportEntity" type="com.example.mc_jacoco.entity.po.CoverageReportEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="job_record_uuid" property="jobRecordUuid" jdbcType="VARCHAR"/>
        <result column="request_status" property="requestStatus" jdbcType="INTEGER"/>
        <result column="giturl" property="gitUrl" jdbcType="VARCHAR"/>
        <result column="now_version" property="nowVersion" jdbcType="VARCHAR"/>
        <result column="base_version" property="baseVersion" jdbcType="VARCHAR"/>
        <result column="diffmethod" property="diffMethod" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="report_url" property="reportUrl" jdbcType="VARCHAR"/>
        <result column="report_file" property="reportFile" jdbcType="VARCHAR"/>
        <result column="line_coverage" property="lineCoverage" jdbcType="DOUBLE"/>
        <result column="branch_coverage" property="branchCoverage" jdbcType="DOUBLE"/>
        <result column="err_msg" property="errMsg" jdbcType="VARCHAR"/>
        <result column="sub_module" property="subModule" jdbcType="VARCHAR"/>
        <result column="from" property="from" jdbcType="INTEGER"/>
        <result column="retry_count" property="retryCount" jdbcType="INTEGER"/>
        <result column="now_local_path" property="nowLocalPath" jdbcType="VARCHAR"/>
        <result column="base_local_path" property="baseLocalPath" jdbcType="VARCHAR"/>
        <result column="log_file" property="log_file" jdbcType="VARCHAR"/>
        <result column="env_type" property="envType" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
    </resultMap>

    <sql id="coverageReport">
        id,job_record_uuid,request_status,giturl,now_version,base_version,diffmethod,`type`,report_url,report_file,line_coverage,branch_coverage,
            err_msg,sub_module,`from`,retry_count,now_local_path,base_local_path,log_file,env_type
    </sql>

    <!--  保存覆盖率数据  -->
    <insert id="insertCoverageReportById" parameterType="com.example.mc_jacoco.entity.po.CoverageReportEntity">
        INSERT INTO diff_coverage_report(`from`, `job_record_uuid`, `giturl`, `now_version`, `base_version`, `type`,
                                         `sub_module`, `line_coverage`,
                                         `branch_coverage`, `request_status`,`env_type`, `err_msg`)
        values (#{from,jdbcType=INTEGER},
                #{jobRecordUuid,jdbcType=VARCHAR},
                #{gitUrl,jdbcType=VARCHAR},
                #{nowVersion,jdbcType=VARCHAR},
                #{baseVersion,jdbcType=VARCHAR},
                #{type,jdbcType=INTEGER},
                #{subModule,jdbcType=VARCHAR},
                #{branchCoverage,jdbcType=DOUBLE},
                #{lineCoverage,jdbcType=DOUBLE},
                #{requestStatus,jdbcType=INTEGER},
                #{envType,jdbcType=VARCHAR},
                #{errMsg,jdbcType=VARCHAR})
    </insert>

    <update id="updateCoverageReportById" parameterType="com.example.mc_jacoco.entity.po.CoverageReportEntity">
        UPDATE diff_coverage_report
        <set>
            <if test="coverageReportEntity.requestStatus != null">
                request_status = #{coverageReportEntity.requestStatus,jdbcType=INTEGER},
            </if>
            <if test="coverageReportEntity.gitUrl != ''">
                giturl = #{coverageReportEntity.gitUrl,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.nowVersion != ''">
                now_version = #{coverageReportEntity.nowVersion,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.baseVersion != ''">
                base_version = #{coverageReportEntity.baseVersion,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.diffMethod != ''">
                diffmethod = #{coverageReportEntity.diffMethod,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.type != null">
                `type` = #{coverageReportEntity.type,jdbcType=INTEGER},
            </if>
            <if test="coverageReportEntity.reportUrl != null">
                report_url = #{coverageReportEntity.reportUrl,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.lineCoverage != null">
                line_coverage = #{coverageReportEntity.lineCoverage,jdbcType=DOUBLE},
            </if>
            <if test="coverageReportEntity.branchCoverage != null">
                branch_coverage = #{coverageReportEntity.branchCoverage,jdbcType=DOUBLE},
            </if>
            <if test="coverageReportEntity.errMsg != null">
                err_msg = #{coverageReportEntity.errMsg,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.subModule != null">
                sub_module = #{coverageReportEntity.subModule,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.from != null">
                `from` = #{coverageReportEntity.from,jdbcType=INTEGER},
            </if>
            <if test="coverageReportEntity.nowLocalPath != null">
                now_local_path = #{coverageReportEntity.nowLocalPath,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.baseLocalPath != null">
                base_local_path = #{coverageReportEntity.baseLocalPath,jdbcType=VARCHAR},
            </if>
            <if test="coverageReportEntity.log_file != null">
                log_file = #{coverageReportEntity.log_file,jdbcType=VARCHAR}
            </if>
        </set>
        where job_record_uuid = #{coverageReportEntity.jobRecordUuid,jdbcType=VARCHAR}
    </update>

    <!--  修改数据状态，使用乐观锁 -->
    <update id="casUpdateByStatus">
        update diff_coverage_report
        <trim prefix="set" suffixOverrides=",">
            <if test="newStatus != null">
                request_status = #{newStatus,jdbcType=INTEGER},
            </if>
            <if test="retryCount != null">
                retry_count = #{retryCount,jdbcType=INTEGER} + 1
            </if>
        </trim>
        where request_status = #{expectStatus,jdbcType=INTEGER}
        and job_record_uuid = #{uuid,jdbcType=VARCHAR}
    </update>


    <!--  根据UUid查询覆盖率信息  -->
    <select id="queryCoverageReportByUuid" resultMap="coverageReportEntity">
        SELECT
        <include refid="coverageReport"/>
        FROM diff_coverage_report
        where job_record_uuid = #{uuid,jdbcType=VARCHAR}
    </select>
    <!--  根据状态和类型查询  -->
    <select id="querByStatusAndfrom" resultMap="coverageReportEntity">
        select <include refid="coverageReport"/>
        from diff_coverage_report
        <where>
            <if test="requestStatue != null">
                request_status = #{requestStatue,jdbcType=INTEGER}
            </if>
            <if test="from != null">
                and `from` = #{from,jdbcType=INTEGER}
            </if>
        and retry_count &lt; 3
        </where>
    </select>

</mapper>